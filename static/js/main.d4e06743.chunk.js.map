{"version":3,"sources":["types/CurrentTodo.ts","features/currentTodo.ts","types/Select.ts","types/Filter.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["CurrentTodo","Select","Filter","actions","todo","type","SET","payload","REMOVE","currentTodoReducer","state","action","defaultFilter","query","status","All","filter","SELECT","INPUT","filterReducer","todosReducer","todos","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","showTodo","showModal","useState","todoId","setTodoId","className","map","id","completed","title","onClick","handleButton","useAppSelector","useDispatch","useSelector","TodoFilter","dispatch","inputValue","handlerFilter","e","target","value","nodeName","filterActions","onSubmit","preventDefault","name","onChange","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","Loader","TodoModal","closeModal","user","setUser","loadUser","useCallback","a","userId","userData","useEffect","href","email","App","selectedValue","setShowModal","todosServer","todosActions","loadTodos","visibleTodos","useMemo","selectValue","inputVal","filterValues","toDo","toLowerCase","includes","filterTodos","length","clickedTodo","currentTodoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4e06743.chunk.js","sourcesContent":["export enum CurrentTodo {\n  REMOVE = 'currentTodo/REMOVE',\n  SET = 'currentTodo/SET',\n}\n","import { Todo } from '../types/Todo';\nimport { CurrentTodo } from '../types/CurrentTodo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: CurrentTodo.REMOVE };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: CurrentTodo.SET;\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: CurrentTodo.REMOVE });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: CurrentTodo.SET,\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case CurrentTodo.SET:\n      return action.payload;\n\n    case CurrentTodo.REMOVE:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export enum Select {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","export enum Filter {\n  SELECT = 'filter/Select',\n  INPUT = 'filter/Input',\n}\n","import { Select } from '../types/Select';\nimport { Filter } from '../types/Filter';\n\ntype FilterSelectAction = { type: Filter.SELECT, payload: Select };\ntype FilterInputAction = { type: Filter.INPUT, payload: string };\n\ntype Action = FilterSelectAction | FilterInputAction;\n\nconst setFilterSelect = (filter: Select): FilterSelectAction => (\n  { type: Filter.SELECT, payload: filter }\n);\n\nconst setFilterInput = (filter: string): FilterInputAction => (\n  { type: Filter.INPUT, payload: filter }\n);\n\nconst defaultFilter = { query: '', status: Select.All };\n\nconst filterReducer = (filter = defaultFilter, action: Action) => {\n  switch (action.type) {\n    case Filter.SELECT:\n      return { ...filter, status: action.payload };\n\n    case Filter.INPUT:\n      return { ...filter, query: action.payload };\n\n    default:\n      return filter;\n  }\n};\n\nexport const actions = { setFilterSelect, setFilterInput };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todo: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  showTodo: (todo: Todo) => void;\n  showModal: boolean;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, showTodo, showModal }) => {\n  const [todoId, setTodoId] = useState(0);\n\n  const handleButton = (todo: Todo) => {\n    showTodo(todo);\n    setTodoId(todo.id);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={showModal\n              && todo.id === todoId ? 'has-background-info-light' : ''}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleButton(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${showModal && todo.id === todoId ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Select } from '../../types/Select';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const inputValue = useAppSelector(state => state.filter.query);\n\n  const handlerFilter = (\n    e: React.ChangeEvent<HTMLSelectElement>\n    | React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { value, nodeName } = e.target;\n\n    switch (nodeName) {\n      case 'INPUT':\n        dispatch(filterActions.setFilterInput(value));\n        break;\n\n      case 'SELECT':\n        dispatch(filterActions.setFilterSelect(value as Select));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const clearState = () => {\n    dispatch(filterActions.setFilterInput(''));\n    dispatch(filterActions.setFilterSelect(Select.All));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(e) => e.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"select\"\n            onChange={handlerFilter}\n          >\n            <option value={Select.All}>All</option>\n            <option value={Select.Active}>Active</option>\n            <option value={Select.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          name=\"search\"\n          value={inputValue}\n          onChange={handlerFilter}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearState}\n            >\n              &nbsp\n            </button>\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ closeModal }) => {\n  const todo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User>();\n\n  const loadUser = useCallback(\n    async () => {\n      if (todo) {\n        const userData = await getUser(todo.userId);\n\n        setUser(userData);\n      }\n    },\n    [todo],\n  );\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                closeModal();\n              }}\n            >\n              &nbsp\n            </button>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { Select } from './types/Select';\nimport { actions as currentTodoActions } from './features/currentTodo';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedValue = useAppSelector(state => state.filter.status);\n  const inputValue = useAppSelector(state => state.filter.query);\n\n  const [showModal, setShowModal] = useState(false);\n\n  async function loadTodos() {\n    const todosServer = await getTodos();\n\n    dispatch(todosActions.setTodos(todosServer));\n  }\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const showTodo = (clickedTodo: Todo) => {\n    dispatch(currentTodoActions.setTodo(clickedTodo));\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    dispatch(currentTodoActions.removeTodo());\n    setShowModal(false);\n  };\n\n  const filterTodos = (selectValue: string, inputVal: string) => {\n    let filterValues = todos;\n\n    switch (selectValue) {\n      case Select.Active:\n        filterValues = filterValues.filter(toDo => !toDo.completed);\n        break;\n\n      case Select.Completed:\n        filterValues = filterValues.filter(toDo => toDo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    filterValues = filterValues.filter(toDo => (\n      toDo.title.toLowerCase().includes(inputVal.toLowerCase())\n    ));\n\n    return filterValues;\n  };\n\n  const visibleTodos = useMemo(() => {\n    return filterTodos(selectedValue, inputValue);\n  }, [todos, selectedValue, inputValue]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                showTodo={showTodo}\n                showModal={showModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal closeModal={closeModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}